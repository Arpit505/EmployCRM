# Generated by Django 3.2.3 on 2021-06-04 07:09

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=True)),
                ('phone_number', models.CharField(max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('link', models.CharField(max_length=250)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, default='', max_length=100)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], max_length=10)),
                ('phone_number', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('college_roll_number', models.CharField(max_length=20)),
                ('profile', models.CharField(choices=[('Developer', 'Developer'), ('AI', 'AI')], max_length=100)),
                ('assigned_to', models.CharField(choices=[('Rekha', 'Rekha'), ('test', 'test')], max_length=100)),
                ('duration', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('4', '4'), ('6', '6')], max_length=2)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('offer_letter_issue_date', models.DateField(blank=True, null=True)),
                ('completion_letter_issue_date', models.DateField(blank=True, null=True)),
                ('internship_completion_date', models.DateField(blank=True, null=True)),
                ('no_of_absents', models.IntegerField(default=0)),
                ('status_of_project', models.CharField(choices=[('Incomplete', 'Incomplete'), ('Partially Completed', 'Partially Completed'), ('Completed', 'Completed')], default='Incomplete', max_length=100)),
                ('is_updated', models.BooleanField(default=False, verbose_name='is_updated')),
                ('request_for_offer_letter', models.BooleanField(default=False, verbose_name='request_for_offer_letter')),
                ('is_offer_letter_issued', models.BooleanField(default=False, verbose_name='is_offer_letter_issued')),
                ('enable_offer_letter_download', models.BooleanField(default=False, verbose_name='enable_offer_letter_download')),
                ('request_for_completion_letter', models.BooleanField(default=False, verbose_name='request_for_completion_letter')),
                ('is_completion_letter_issued', models.BooleanField(default=False, verbose_name='is_completion_letter_issued')),
                ('enable_completion_letter_download', models.BooleanField(default=False, verbose_name='enable_completion_letter_download')),
                ('enable_completion_letter_download_urgent', models.BooleanField(default=False, verbose_name='enable_completion_letter_download_urgent')),
                ('college_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.college')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100)),
                ('task_name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.profile')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.student')),
            ],
        ),
    ]
